import 'package:flutter_local_notifications/flutter_local_notifications.dart';
import 'package:flutter/material.dart';
import 'package:firebase_messaging/firebase_messaging.dart';
import 'package:firebase_core/firebase_core.dart';

class NotificationService {
  static final FlutterLocalNotificationsPlugin _notifications = FlutterLocalNotificationsPlugin();
  static final FirebaseMessaging _firebaseMessaging = FirebaseMessaging.instance;
  static bool _isInitialized = false;

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  static Future<void> initialize() async {
    if (_isInitialized) return;

    try {
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase
      await Firebase.initializeApp();

      // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è Android
      const AndroidInitializationSettings androidSettings =
      AndroidInitializationSettings('@mipmap/ic_launcher');

      // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è iOS
      const DarwinInitializationSettings iosSettings = DarwinInitializationSettings(
        requestAlertPermission: true,
        requestBadgePermission: true,
        requestSoundPermission: true,
      );

      const InitializationSettings settings = InitializationSettings(
        android: androidSettings,
        iOS: iosSettings,
      );

      await _notifications.initialize(
        settings,
        onDidReceiveNotificationResponse: (NotificationResponse response) {
          // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
          _onNotificationTap(response.payload);
        },
      );

      // –°–æ–∑–¥–∞–µ–º –∫–∞–Ω–∞–ª –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (Android)
      const AndroidNotificationChannel channel = AndroidNotificationChannel(
        'wishlist_channel',
        'Wishlist Updates',
        description: 'Notifications for new wishlist items',
        importance: Importance.high,
        playSound: true,
        enableVibration: true,
      );

      await _notifications
          .resolvePlatformSpecificImplementation<AndroidFlutterLocalNotificationsPlugin>()
          ?.createNotificationChannel(channel);

      // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ FCM
      await _setupFCM();

      print('–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
      _isInitialized = true;
    } catch (e) {
      print('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: $e');
    }
  }

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Firebase Cloud Messaging
  static Future<void> _setupFCM() async {
    try {
      // –ó–∞–ø—Ä–æ—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
      NotificationSettings settings = await _firebaseMessaging.requestPermission(
        alert: true,
        badge: true,
        sound: true,
      );

      print('–†–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: ${settings.authorizationStatus}');

      // –ü–æ–ª—É—á–µ–Ω–∏–µ FCM —Ç–æ–∫–µ–Ω–∞
      String? token = await _firebaseMessaging.getToken();
      print('FCM Token: $token');

      // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ–Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
      FirebaseMessaging.onBackgroundMessage(_firebaseBackgroundMessageHandler);

      // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –∫–æ–≥–¥–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ foreground
      FirebaseMessaging.onMessage.listen(_onForegroundMessage);

      // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –∫–æ–≥–¥–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ background –Ω–æ –æ—Ç–∫—Ä—ã—Ç–æ
      FirebaseMessaging.onMessageOpenedApp.listen(_onMessageOpenedApp);

    } catch (e) {
      print('–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ FCM: $e');
    }
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ–Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π)
  @pragma('vm:entry-point')
  static Future<void> _firebaseBackgroundMessageHandler(RemoteMessage message) async {
    await Firebase.initializeApp();

    print("–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ–Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: ${message.messageId}");

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    if (message.notification != null) {
      await _showNotificationFromFCM(message);
    }
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ foreground
  static Future<void> _onForegroundMessage(RemoteMessage message) async {
    print("–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ foreground: ${message.messageId}");

    if (message.notification != null) {
      await _showNotificationFromFCM(message);
    }
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∫–æ–≥–¥–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ background
  static Future<void> _onMessageOpenedApp(RemoteMessage message) async {
    print("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–∫—Ä—ã—Ç–æ –∏–∑ background: ${message.messageId}");
    _handleNotificationTap(message.data);
  }

  // –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏–∑ FCM
  static Future<void> _showNotificationFromFCM(RemoteMessage message) async {
    final notification = message.notification;
    final data = message.data;

    String title = notification?.title ?? 'üéÅ –ù–æ–≤—ã–π –ø—Ä–µ–¥–º–µ—Ç –≤ –≤–∏—à–ª–∏—Å—Ç–µ!';
    String body = notification?.body ?? data['body'] ?? '–ù–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ';
    String addedBy = data['addedBy'] ?? '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
    String itemTitle = data['itemTitle'] ?? '–Ω–æ–≤—ã–π –ø—Ä–µ–¥–º–µ—Ç';

    await showNewItemNotification(itemTitle, addedBy, data: data);
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
  static void _onNotificationTap(String? payload) {
    print('–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–∞–∂–∞—Ç–æ: $payload');
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –Ω–∞–≤–∏–≥–∞—Ü–∏—é –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É —ç–∫—Ä–∞–Ω—É
  }

  static void _handleNotificationTap(Map<String, dynamic> data) {
    print('–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: $data');
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  }

  // –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –ø–æ–∫–∞–∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  static Future<void> showNewItemNotification(
      String itemTitle,
      String addedBy, {
        Map<String, dynamic>? data,
      }) async {
    try {
      final AndroidNotificationDetails androidDetails = AndroidNotificationDetails(
        'wishlist_channel',
        'Wishlist Updates',
        channelDescription: 'Notifications for new wishlist items',
        importance: Importance.high,
        priority: Priority.high,
        playSound: true,
        enableVibration: true,
        showWhen: true,
        autoCancel: true,
        channelShowBadge: true,
        styleInformation: BigTextStyleInformation(
          '$addedBy –¥–æ–±–∞–≤–∏–ª(–∞): "$itemTitle"',
          contentTitle: 'üéÅ –ù–æ–≤—ã–π –ø—Ä–µ–¥–º–µ—Ç –≤ –≤–∏—à–ª–∏—Å—Ç–µ!',
        ),
      );

      const DarwinNotificationDetails iosDetails = DarwinNotificationDetails(
        presentAlert: true,
        presentBadge: true,
        presentSound: true,
      );

      final NotificationDetails details = NotificationDetails(
        android: androidDetails,
        iOS: iosDetails,
      );

      await _notifications.show(
        DateTime.now().millisecondsSinceEpoch.remainder(100000),
        'üéÅ –ù–æ–≤—ã–π –ø—Ä–µ–¥–º–µ—Ç –≤ –≤–∏—à–ª–∏—Å—Ç–µ!',
        '$addedBy –¥–æ–±–∞–≤–∏–ª(–∞): "$itemTitle"',
        details,
      );

      print('–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–∫–∞–∑–∞–Ω–æ: $itemTitle –æ—Ç $addedBy');
    } catch (e) {
      print('–û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: $e');
    }
  }

  // –ü–æ–ª—É—á–∏—Ç—å FCM —Ç–æ–∫–µ–Ω –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å —Å–µ—Ä–≤–µ—Ä–∞
  static Future<String?> getFCMToken() async {
    try {
      return await _firebaseMessaging.getToken();
    } catch (e) {
      print('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è FCM —Ç–æ–∫–µ–Ω–∞: $e');
      return null;
    }
  }

  // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Ç–æ–ø–∏–∫–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
  static Future<void> subscribeToTopic(String topic) async {
    try {
      await _firebaseMessaging.subscribeToTopic(topic);
      print('–ü–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ —Ç–æ–ø–∏–∫: $topic');
    } catch (e) {
      print('–û—à–∏–±–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ —Ç–æ–ø–∏–∫: $e');
    }
  }

  // –û—Ç–ø–∏—Å–∫–∞ –æ—Ç —Ç–æ–ø–∏–∫–æ–≤
  static Future<void> unsubscribeFromTopic(String topic) async {
    try {
      await _firebaseMessaging.unsubscribeFromTopic(topic);
      print('–û—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç —Ç–æ–ø–∏–∫–∞: $topic');
    } catch (e) {
      print('–û—à–∏–±–∫–∞ –æ—Ç–ø–∏—Å–∫–∏ –æ—Ç —Ç–æ–ø–∏–∫–∞: $e');
    }
  }

  // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  static Future<bool> requestPermissions() async {
    try {
      NotificationSettings settings = await _firebaseMessaging.requestPermission(
        alert: true,
        badge: true,
        sound: true,
      );

      return settings.authorizationStatus == AuthorizationStatus.authorized;
    } catch (e) {
      print('–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π: $e');
      return false;
    }
  }
}